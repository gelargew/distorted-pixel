/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: dez_z (https://sketchfab.com/dez_z)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/models/35aeea83f4f54f30b36214051e93447a
title: Dice
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useBox } from '@react-three/cannon'

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh
  }
  materials: {
    ['default']: THREE.MeshStandardMaterial
  }
}

export default function DiceMesh({ ...props }: JSX.IntrinsicElements['group']) {
  const [group, api] = useBox(() => ({mass: 0.01}))
  const { nodes, materials } = useGLTF('/3d/dice/scene.gltf') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.mesh_0.geometry} material={materials['default']} />
      </group>
    </group>
  )
}

useGLTF.preload('/3d/dice/scene.gltf')
